{"version":3,"sources":["sidebar/VerticalHandle/Handle.tsx","sidebar/VerticalHandle/VerticalHandle.tsx","sidebar/SidebarContent.tsx","common/images/header.svg","sidebar/SidebarTitle.tsx","AppContext.tsx","common/data/getData.ts","sidebar/SidebarItemWrapper.tsx","sidebar-datasets/TablePagination.tsx","sidebar-datasets/TableRow.tsx","sidebar-datasets/DatasetsForm.tsx","common/components/CopyToClipboard.tsx","sidebar-datasets/DatasetPreview.tsx","common/components/Slider.tsx","colormap/colormaps.ts","common/components/Legend.tsx","colormap/SinglebandSelector.tsx","colormap/RGBSlider.tsx","colormap/RGBSelector.tsx","colormap/endpoints.ts","colormap/DatasetsColormap.tsx","sidebar-datasets/SidebarDatasets.tsx","map/MapZoomControl.tsx","common/hooks/useWindowDimensions.ts","common/hooks/useIsMobileWidth.ts","map/geojsonStyles.ts","map/Map.tsx","App.tsx","theme/theme.js","index.tsx"],"names":["useStyles","makeStyles","theme","root","height","width","background","cursor","display","alignItems","justifyContent","collapsedRoot","icon","color","palette","primary","main","transform","iconBox","zIndex","padding","spacing","position","borderRadius","Handle","onMouseDown","onMouseUp","isCollapsed","onClickExpand","classes","Box","draggable","className","clsx","onClick","ExpandLess","DragHandle","VerticalHandle","boxWidth","onDrag","useState","isDragging","setIsDragging","minWidth","initialWidth","setInitialWidth","handleMouseMove","useCallback","e","windowWidth","window","innerWidth","w","clientX","handleMouseDown","handleMouseUp","useEffect","remove","removeEventListener","addEventListener","breakpoints","rooterThanRoot","down","overflowY","leftBorder","borderLeft","topBorder","borderTop","SidebarContent","children","setWidth","Paper","style","wrapper","margin","backgroundColor","borderBottom","opacity","infoIcon","marginLeft","detailsBox","marginTop","marginBottom","detailsText","hostText","fontSize","wordBreak","hasDescription","textDecoration","noDescription","SidebarTitle","host","keys","flexWrap","src","HeaderImage","alt","my","mt","Typography","variant","Link","href","target","map","keyItem","description","Tooltip","title","key","toLowerCase","AppContext","createContext","getData","url","a","fetch","data","json","console","error","undefined","paddingBottom","spinner","SidebarItemWrapper","isLoading","mb","CircularProgress","formControl","border","TablePagination","value","options","onGetValue","onGetPage","page","disableNext","IconButton","disabled","FormControl","Select","id","onChange","Number","option","i","MenuItem","tableCell","tableRow","iconChecked","noPadding","TableRow","dataset","keyVal","checked","onMouseEnter","onMouseLeave","hover","TableCell","Object","item","input","inputLabel","DatasetsForm","onSubmitFields","formValues","setFormValues","onSubmitForm","preventDefault","queryString","join","reduceKeys","reduce","acc","onSubmit","isLastUneven","length","TextField","toLocaleLowerCase","label","fullWidth","val","Button","type","disabledStyle","enabledStyle","CopyToClipboard","helperText","message","location","copyUrl","tooltip","setTooltip","copy","setTimeout","Grid","container","justify","data-clipboard-text","outline","imagePreview","codeContainer","overflowX","maxWidth","codeContainerText","copyTooltip","metadataLink","DatasetPreview","limit","activeDataset","datasetUrl","colSpan","Collapse","in","timeout","unmountOnExit","p","xs","whiteSpace","j","includes","buildStr","returnJson","datasetKey","loading","Slider","defaultValue","min","max","step","getValue","getValueCommitted","sliderMarginLeft","noNumbers","unit","setValue","direction","wrap","marginRight","Array","isArray","scale","x","newValue","onChangeCommitted","valueLabelDisplay","COLORMAPS","displayName","img_url","inputBox","colorbarStyle","Legend","range","onGetRange","SinglebandSelector","useContext","state","colormap","datasets","activeSinglebandRange","actions","setColormap","setActiveSinglebandRange","minRange","maxRange","localRange","setLocalRange","InputLabel","colorId","colormapObj","find","onSetColormap","String","mx","RGBSlider","selectValue","onGetSliderValue","onGetSelectValue","sliderValue","ml","RGBSelector","datasetBands","activeRGB","setActiveRGB","datasetPageRange","band","bandKey","onGetBandValue","sliderKey","endpoints","rgbText","DatasetsColormap","activeEndpoint","setActiveEndpoint","table","maxHeight","tableHeadTypography","fontWeight","limitOptions","SidebarDatasetsItem","selectedDatasetRasterUrl","setKeys","setHoveredDataset","setDatasets","setActiveDataset","setSelectedDatasetRasterUrl","setLimit","setPage","setDatasetBands","queryFields","setQueryFields","setIsLoading","getDatasets","pageRef","limitRef","response","datasetsResponse","hasOwnProperty","metadataResponsesPreFetch","buildMetadataUrl","preFetchData","Promise","all","metadataResponses","getKeys","keysReponse","toUpperCase","substring","onGetRGBBands","noBandKeysURL","bands","activeRGBLocal","colorString","percentiles","validRange","keysRasterUrl","buildRasterUrl","hasValueForBand","every","colorObj","hasValueForRange","lastKey","rgbParams","TableContainer","Table","aria-labelledby","size","aria-label","TableHead","TableBody","index","actualIndex","defaultRGB","onHandleRow","convex_hull","iconButton","fill","boxSizing","activeIcon","gridStyle","left","top","boxShadow","ZoomControl","isOpticalBasemap","setIsOpticalBasemap","setViewport","placement","v","zoom","getWindowDimensions","document","body","clientWidth","clientHeight","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","regionPaintFill","regionPaintLine","Map","isMobile","useIsMobileWidth","viewport","hoveredDataset","localViewport","setLocalViewport","localRasterUrl","setLocalRasterUrl","basemap","mapRef","useRef","latitude","longitude","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubicInOut","currentBounds","bounds","formattedBounds","current","mapHeight","scrollHeight","currentMapWidth","scrollWidth","viewportBounds","WebMercatorViewport","fitBounds","boundsViewportToPass","mapboxApiAccessToken","mapStyle","onViewportChange","paint","tileSize","tiles","source","ref","defaultColormap","defaultViewport","bearing","pitch","R","G","B","App","hostnameProp","hostname","setHostname","initializeApp","charAt","slice","onload","bind","Provider","details","SidebarDatasets","DHITheme","createMuiTheme","secondary","grey","medium","light","dark","flexLayout","flexDirection","flex","typography","h1","h2","h3","h6","h5","subtitle1","body2","drawerColor","drawerWidth","overrides","MuiButton","textTransform","containedSecondary","outlinedPrimary","outlinedSecondary","MuiCardActions","MuiCardContent","MuiCheckbox","MuiSvgIcon","MuiAccordion","MuiAccordionDetails","MuiAccordionSummary","content","minHeight","MuiFormControlLabel","paddingLeft","MuiIconButton","MuiInputBase","MuiPaper","rounded","elevation1","elevation4","MuiToolbar","regular","MuiTooltip","arrow","require","config","ReactDOM","render","StrictMode","ThemeProvider","DhiTheme","getElementById","innerText"],"mappings":"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","file":"static/js/main.8c885d32.chunk.js","sourcesContent":["import React, { MouseEventHandler, FC } from 'react'\nimport clsx from 'clsx'\nimport { Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DragHandle as DragHandleIcon, ExpandLess as ExpandLessIcon } from '@material-ui/icons'\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\theight: '100%',\n\t\twidth: 2,\n\t\tbackground: '#557A8F',\n\t\tcursor: 'e-resize',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-around',\n\t},\n\tcollapsedRoot: {\n\t\tcursor: 'pointer',\n\t},\n\ticon: {\n\t\tcolor: theme.palette.primary.main,\n\t\ttransform: 'translate(0, -2px)',\n\t},\n\ticonBox: {\n\t\tzIndex: 10,\n\t\tpadding: theme.spacing(1, 1, 0.1, 1),\n\t\ttransform: 'translate(-40%, 0) rotate(-90deg)',\n\t\twidth: 20,\n\t\theight: 15,\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'space-around',\n\t\tbackground: '#85A2B3',\n\t\tposition: 'relative',\n\t\tborderRadius: '20px 20px 0 0',\n\t},\n}))\n\ninterface Props {\n\tonMouseUp: MouseEventHandler<HTMLElement> | undefined,\n\tonMouseDown: MouseEventHandler<HTMLElement> | undefined,\n\tisCollapsed: boolean,\n\tonClickExpand: () => void\n}\n\nconst Handle: FC<Props> = ({\n\tonMouseDown,\n\tonMouseUp,\n\tisCollapsed,\n\tonClickExpand\n}) => {\n\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<Box\n\t\t\tdraggable={false}\n\t\t\tonMouseDown={onMouseDown}\n\t\t\tonMouseUp={onMouseUp}\n\t\t\tclassName={clsx(classes.root, isCollapsed && classes.collapsedRoot)}\n\t\t\tonClick={() => isCollapsed && onClickExpand()}\n\t\t>\n\t\t\t<Box draggable={false} className={classes.iconBox}>\n\t\t\t\t{!isCollapsed ?\n\t\t\t\t\t<DragHandleIcon className={classes.icon}/> :\n\t\t\t\t\t<ExpandLessIcon className={classes.icon} />\n\t\t\t}\n\t\t\t</Box>\n\t\t</Box>\n\t)\n\n}\n\nexport default Handle\n","import React, { useState, useEffect, useCallback, FC } from 'react'\nimport Handle from './Handle'\n\nconst minWidth = 0\nconst minMapWidth = 50\n\ninterface Props{\n\tboxWidth: number,\n\tonDrag: (w: number) => void,\n}\n\nconst VerticalHandle: FC<Props> = ({\n\tboxWidth,\n\tonDrag,\n}) => {\n\n\tconst [ isDragging, setIsDragging ] = useState(false)\n\tconst [ initialWidth, setInitialWidth ] = useState(minWidth * 2)\n\n\tconst handleMouseMove = useCallback(e => {\n\n\t\tconst windowWidth = window.innerWidth\n\t\tconst w = e.clientX < minMapWidth ?\n\t\t\twindowWidth - minMapWidth :\n\t\t\twindowWidth - e.clientX\n\n\t\tonDrag(w)\n\n\t}, [ onDrag ])\n\n\tconst handleMouseDown = useCallback(e => {\n\n\t\tsetIsDragging(true)\n\t\tconst w = window.innerWidth - e.clientX\n\t\tsetInitialWidth(initialWidth < minWidth ? minWidth : w)\n\n\t}, [  initialWidth ])\n\n\tconst handleMouseUp = useCallback(() => {\n\n\t\tif (boxWidth < minWidth) {\n\n\t\t\tonDrag(initialWidth)\n\n\t\t}\n\n\t\tif(boxWidth < 300){\n\t\t\tonDrag(0)\n\t\t}\n\n\t\tsetIsDragging(false)\n\n\t}, [ boxWidth, initialWidth, onDrag ])\n\n\tuseEffect(() => {\n\n\t\tconst remove = () => {\n\n\t\t\twindow.removeEventListener('mousemove', handleMouseMove)\n\t\t\twindow.removeEventListener('mouseup', handleMouseUp)\n\t\t\twindow.removeEventListener('mousedown', handleMouseDown)\n\n\t\t}\n\n\t\tconst add = () => {\n\n\t\t\twindow.addEventListener('mousedown', handleMouseDown)\n\t\t\twindow.addEventListener('mousemove', handleMouseMove)\n\t\t\twindow.addEventListener('mouseup', handleMouseUp)\n\n\t\t}\n\n\t\tif (isDragging) add()\n\t\telse remove()\n\n\t\treturn remove\n\n\t}, [ isDragging, handleMouseMove, handleMouseDown, handleMouseUp ])\n\n\treturn (\n\t\t<Handle\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tonMouseUp={() => setIsDragging(false)}\n\t\t\tisCollapsed={boxWidth < 10}\n\t\t\tonClickExpand={() => onDrag(30/100 * window.innerWidth)}\n\t\t/>\n\t)\n\n}\n\nexport default VerticalHandle\n","import React, { FC, ReactNode, useState } from 'react'\nimport { Paper, Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport VerticalHandle from \"./VerticalHandle/VerticalHandle\"\n\nconst useStyles = makeStyles(({ breakpoints }) => ({\n\trooterThanRoot: {\n\t\t[ breakpoints.down('xs') ]: {\n\t\t\twidth: '100%',\n\t\t\theight: '50%',\n\t\t},\n\t},\n\troot: {\n\t\t// overflowX: 'auto',\n\t\toverflowY: 'auto',\n\t\theight: '100%',\n\t\t[ breakpoints.down('xs') ]: {\n\t\t\twidth: '100%',\n\t\t},\n\t},\n\tleftBorder: {\n\t\tborderLeft: '1px solid #DBE4E9',\n\t},\n\ttopBorder: {\n\t\tborderTop: '1px solid #DBE4E9',\n\t},\n}))\n\ninterface Props {\n\tchildren?: ReactNode,\n}\nconst SidebarContent: FC<Props> = ({\n\tchildren,\n}) => {\n\n\tconst classes = useStyles()\n\tconst [width, setWidth] = useState(30/100 * window.innerWidth)\n\n\treturn (\n\t\t<>\n\t\t\t<VerticalHandle \n\t\t\t\tboxWidth={width}\n\t\t\t\tonDrag={setWidth}\n\t\t\t/>\n\t\t\t<Box className={classes.rooterThanRoot}>\n\t\t\t\t<Paper className={classes.root} style={{ width: width }}>\n\t\t\t\t\t{children}\n\t\t\t\t</Paper>\n\t\t\t</Box>\n\t\t</>\n\t)\n\n}\n\nexport default SidebarContent\n","export default __webpack_public_path__ + \"static/media/header.87193822.svg\";","import React, { CSSProperties, FC } from 'react'\nimport { Box, Typography, Link, Tooltip } from '@material-ui/core'\nimport HeaderImage from \"./../common/images/header.svg\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { KeyItem } from \"./../common/data/getData\"\nconst useStyles = makeStyles(() => ({\n\twrapper: {\n\t\tmargin: 16,\n\t\tbackgroundColor: '#FFFFFF',\n\t\tborderBottom: '1px solid #86A2B3'\n\t},\n\ticon: {\n\t\twidth: 20,\n\t\theight: 22,\n\t\t\"&:hover\":{\n\t\t\topacity: .7\n\t\t}\n\t},\n\tinfoIcon: {\n\t\tmarginLeft: 4\n\t},\n\tdetailsBox: {\n\t\tmarginTop: 8,\n\t\tmarginBottom: 8,\n\t\t\"&:hover\":{\n\t\t\tcursor: 'pointer'\n\t\t}\n\t},\n\tdetailsText: {\n\t\tmarginTop: 6\n\t},\n\thostText: {\n\t\tfontSize: 12,\n\t\twordBreak: 'break-all'\n\t},\n\thasDescription: {\n\t\tcursor: 'pointer',\n\t\t'&:hover': {\n\t\t\ttextDecoration: 'underline'\n\t\t}\n\t},\n\tnoDescription: {\n\t\tcursor: 'default',\n\t}\n}))\n\ninterface Props {\n\thost?: string,\n\tstyle?: CSSProperties,\n\tdetails?: string,\n\tkeys?: KeyItem[]\n}\nconst SidebarTitle: FC<Props> = ({\n\tstyle,\n\thost,\n\tkeys\n}) => {\n\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<Box\n\t\t\tstyle={{ ...style }}\n\t\t\tclassName={classes.wrapper}\n\t\t>\n\t\t\t<Box display={'flex'} flexWrap={'nowrap'} justifyContent={'space-between'} alignItems={'center'}>\n\t\t\t\t<img src={HeaderImage} alt={'Teracotta preview app'} />\n\t\t\t</Box>\n\t\t\t{\n\t\t\t\thost && keys && (\n\t\t\t\t\t<Box my={1} mt={2}>\n\t\t\t\t\t\t<Typography variant={'body1'} className={classes.hostText}>\n\t\t\t\t\t\t\t<b>Host: </b>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{host}\t\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant={'body1'} className={classes.hostText}>\n\t\t\t\t\t\t\t<b>Docs: </b>\n\t\t\t\t\t\t\t<Link href={`${host}/apidoc`} target={'_blank'}>\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{`${host}/apidoc`}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant={'body1'} className={classes.hostText}>\n\t\t\t\t\t\t\t<b>{'Keys: '}</b>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t{keys.map((keyItem: KeyItem) => \n\t\t\t\t\t\t\t\t\tkeyItem.description ? \n\t\t\t\t\t\t\t\t\t\t<Tooltip \n\t\t\t\t\t\t\t\t\t\t\ttitle={keyItem.description || false}\n\t\t\t\t\t\t\t\t\t\t\tkey={`tooltip-${keyItem.key}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t{'/'}\n\t\t\t\t\t\t\t\t\t\t\t\t<span className={classes.hasDescription}>{`{${keyItem.key.toLowerCase()}}`}</span>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<span key={`tooltip-${keyItem.key}`}>\n\t\t\t\t\t\t\t\t\t\t\t{'/'}\n\t\t\t\t\t\t\t\t\t\t\t<span className={classes.noDescription}>{`{${keyItem.key.toLowerCase()}}`}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)}\t\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t</Box>\n\t)\n}\n\n\nexport default SidebarTitle\n","import { createContext } from 'react'\nimport { Viewport } from \"./map/types\"\nimport { FeatureDataset } from \"./map/types\"\nimport { ResponseMetadata200, KeyItem } from \"./common/data/getData\"\nimport { Colormap } from \"./colormap/colormaps\"\n\nexport type RGBValue = {\n\trange: number[] | undefined,\n\tband: string | undefined\n}\n\nexport type activeRGBSelectorRange = {\n\tR: RGBValue,\n\tG: RGBValue,\n\tB: RGBValue,\n\t[key: string]: RGBValue\n}\n\ninterface AppContextValues {\n\tstate: {\n        viewport: Viewport,\n        isOpticalBasemap: boolean,\n\t\thostname: string | undefined,\n\t\tkeys: KeyItem[] | undefined,\n\t\thoveredDataset: FeatureDataset | undefined,\n\t\tdatasets: undefined | ResponseMetadata200[],\n\t\tactiveDataset: undefined | number,\n\t\tselectedDatasetRasterUrl: string | undefined,\n\t\tpage: number,\n\t\tlimit: number,\n\t\tcolormap: Colormap,\n\t\tactiveSinglebandRange: number[] | undefined,\n\t\tactiveRGB: activeRGBSelectorRange | undefined,\n\t\tactiveEndpoint: string,\n\t\tdatasetBands: string[] | undefined\n\t},\n\tactions: {\n\t\tsetIsOpticalBasemap: Function,\n        setViewport: Function,\n\t\tsetKeys: Function,\n\t\tsetHoveredDataset: Function,\n\t\tsetDatasets: Function,\n\t\tsetActiveDataset: Function,\n\t\tsetSelectedDatasetRasterUrl: Function,\n\t\tsetPage: Function,\n\t\tsetLimit: Function,\n\t\tsetColormap: Function,\n\t\tsetActiveSinglebandRange: Function,\n\t\tsetActiveEndpoint: Function,\n\t\tsetActiveRGB: Function,\n\t\tsetDatasetBands: Function\n\t},\n}\n\ntype Context = AppContextValues\n\nconst AppContext = createContext<Context>(null as any)\n\nexport default AppContext\n","\n\nimport { FeatureDataset } from \"../../map/types\"\n\nexport type KeyItem = {\n    key: string,\n    description?: string\n}\n\nexport type ResponseKeys = {\n    keys: KeyItem[]\n}\n\nexport type DatasetItem = Record<string, string>\n\nexport type ResponseDatasets = {\n    page: number,\n    limit: number,\n    datasets: DatasetItem[]\n}\n\nexport type ResponseMetadata200 = {\n    keys: Record<string, string>,\n    bounds: number[],\n    convex_hull: FeatureDataset,\n    valid_percentage: number,\n    range: number[],\n    mean: number,\n    stdev: number,\n    percentiles: number[],\n    metadata: Record<string, string>,\n    [key: string]: Record<string, string> | number | number[] | FeatureDataset\n}\n\nexport type ResponseMetadata404 = {\n    message: string\n}\n\nexport type ResponseMetadata = ResponseMetadata200 | ResponseMetadata404\n\nconst getData = async (url: string): Promise< ResponseKeys | ResponseDatasets | ResponseMetadata | undefined> => {\n\n    try{\n\n        const data = await fetch(url);\n        const json = await data.json();\n        \n        return json\n\n    }catch(err){\n\n        console.error(err)\n        return undefined\n    }\n\n}\n\nexport default getData;","import React, { FC, ReactNode } from 'react'\nimport { Box, Typography, CircularProgress } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() => ({\n    wrapper: {\n\t\tmargin: 16,\n        paddingBottom: 16,\n\t\tbackgroundColor: '#FFFFFF',\n\t\tborderBottom: '1px solid #86A2B3'\n\t},\n    spinner: {\n        width: \"16px !important\",\n        height: \"16px !important\",\n        marginLeft: 6\n    }\n}))\n\ninterface Props {\n    isLoading?: boolean,\n    title: string,\n    children: ReactNode\n}\nconst SidebarItemWrapper: FC<Props> = ({\n    isLoading,\n    title,\n    children\n}) => {\n\n    const classes = useStyles()\n\n    return (\n        <Box className={classes.wrapper}>\n            <Box display={'flex'} alignItems={'center'} mb={1}>\n                <Typography variant={'body1'}>\n                    {title}\n                </Typography>\n                {\n                    isLoading && <CircularProgress color={'primary'} className={classes.spinner}/>\n                }\n            </Box>\n            {children}\n        </Box>\n    )\n\n}\n\nexport default SidebarItemWrapper\n","import React, { FC, ChangeEvent } from 'react'\nimport { \n    Box,\n    FormControl,\n    MenuItem,\n    Select,\n    IconButton,\n    Typography\n } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        border: 'none',\n        marginLeft: 6\n    },\n    icon: {\n        width: 20,\n        height: 20,\n        cursor: 'pointer'\n    }\n}))\n\ninterface Props {\n    value: number,\n    options: number[],\n    onGetValue: (val: number) => void,\n    page: number,\n    onGetPage: (page: number) => void,\n    disableNext: boolean\n}\nconst TablePagination: FC<Props> = ({\n    value, \n    options, \n    onGetValue,\n    onGetPage,\n    page,\n    disableNext\n}) => {\n    const classes = useStyles()\n\n    const handleChange = (e: ChangeEvent<{ name?: string | undefined; value: unknown; }>) => {\n        onGetValue(Number(e.target.value))\n    }\n\n    const onNextPage = () => {\n        onGetPage(page + 1)\n    }\n\n    const onPreviousPage = () => {\n        onGetPage(page - 1)\n    }\n\n    return (\n        <Box display={'flex'} justifyContent={'space-between'} alignItems={'center'}>\n             <Box display={'flex'} alignItems={'center'}>\n                <IconButton disabled={page === 0} onClick={onPreviousPage}>\n                    <NavigateBeforeIcon className={classes.icon}/>\n                </IconButton>\n                <Typography variant={'body2'}>\n                    {`Page ${page}`}\n                </Typography>\n                <IconButton onClick={onNextPage} disabled={disableNext}>\n                    <NavigateNextIcon className={classes.icon}/>\n                </IconButton>\n            </Box>\n            <Box display={'flex'} alignItems={'center'}>\n                <Typography variant={'body2'}>\n                    {'Rows per page:'}\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <Select\n                        id=\"demo-simple-select-outlined\"\n                        value={value}\n                        onChange={handleChange}\n                    >\n                        {\n                            options.map((option: number, i: number) => (\n                                <MenuItem key={`limit-${option}`} value={option}>{option}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            </Box>\n        </Box>\n    )\n}\n\nexport default TablePagination\n","import React, { FC } from 'react'\nimport { TableRow as MuiTableRow, TableCell, Box, IconButton } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { DatasetItem } from \"../common/data/getData\"\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nconst useStyles = makeStyles(() => ({\n    tableCell: {\n        padding: 6,\n        borderBottom: 'none'\n    },\n    tableRow: {\n        cursor: 'pointer'\n    },\n    icon: {\n        width: 18,\n        height: 18\n    },\n    iconChecked: {\n        color: '#61C051',\n    },\n    noPadding: {\n        padding: 0\n    }\n}))\n\ninterface Props {\n    dataset: DatasetItem,\n    keyVal: string,\n    checked: boolean,\n    onClick?: () => void,\n    onMouseEnter?: () => void,\n    onMouseLeave?: () => void\n}\n\nconst TableRow: FC<Props> = ({ \n    dataset, \n    keyVal, \n    checked, \n    onClick,\n    onMouseEnter,\n    onMouseLeave \n}) => {\n\n    const classes = useStyles()\n    \n    return (\n            <MuiTableRow \n                hover \n                onClick={onClick} \n                className={classes.tableRow}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                <TableCell className={classes.tableCell} >\n                    <Box display={'flex'} alignItems={'center'}>\n                        {\n                            checked ? \n                            <IconButton classes={{root: classes.noPadding}}>\n                                <CheckCircleIcon className={`${classes.iconChecked} ${classes.icon}`}/>\n                            </IconButton> : \n                            <IconButton classes={{root: classes.noPadding}}>\n                                <RadioButtonUncheckedIcon className={classes.icon}/>\n                            </IconButton>\n                        }\n                    </Box>\n                </TableCell>\n                {\n                    Object.keys(dataset).map((item: string, i: number) => (\n                        <TableCell className={classes.tableCell} key={`${keyVal}-cell-${i}`}>\n                            {dataset[item]}\n                        </TableCell>\n                    ))\n                }\n            </MuiTableRow>\n    )\n}\n\nexport default TableRow\n","import React, { FC, useState, useEffect, FormEvent } from 'react'\nimport { Box, TextField, Button  } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { KeyItem } from \"../common/data/getData\"\n\ntype FormValues = Record<string, string | number> | undefined\n\nconst useStyles = makeStyles(theme => ({\n    input: {\n        width: '50%'\n    },\n    inputLabel: {\n        '& label': {\n            fontSize: 12\n        }\n    }\n}))\n\ninterface Props {\n    keys: KeyItem[],\n    onSubmitFields: (queryString: string) => void\n}\nconst DatasetsForm: FC<Props> = ({\n    keys,\n    onSubmitFields\n}) => {\n\n    const classes = useStyles()\n    const [ formValues, setFormValues ] = useState<FormValues>(undefined)\n\n    const onSubmitForm = (e: FormEvent<HTMLFormElement> | undefined) => {\n        if(e) e.preventDefault()\n        if(formValues){\n\n            const queryString = Object.keys(formValues).map(\n                (keyItem: string) => \n                    formValues[keyItem] !== '' ? `&${keyItem}=${formValues[keyItem]}` : ''\n                ).join('')\n\n            if(queryString) onSubmitFields(queryString)\n        }\n    }\n\n    useEffect(() => {\n        const reduceKeys = keys.reduce((acc:Record<string, string> , keyItem: KeyItem) => {\n           \n            acc[keyItem.key.toLowerCase()] = ''\n            return acc\n\n        }, {})\n\n        setFormValues(reduceKeys)\n\n    }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <form onSubmit={e => onSubmitForm(e)}>\n            {\n                keys.map((keyItem: KeyItem, i: number) => {\n                    const isLastUneven = keys.length % 2 === 1 && i === keys.length - 1 ? true : false\n                return(\n                    <TextField \n                        key={`textfield-${keyItem.key}`} \n                        id={keyItem.key.toLocaleLowerCase()} \n                        label={keyItem.key}\n                        className={`${isLastUneven ? '' : classes.input} ${classes.inputLabel}`} \n                        fullWidth={isLastUneven}\n                        onChange={(e) => setFormValues((val) => ({ ...val, [keyItem.key.toLowerCase()]: e.target.value }))}\n                        value={formValues?.[ keyItem.key ]}\n                    />\n                )})\n            }\n            <Box mt={2} width={1} display={'flex'} justifyContent={'flex-end'}>\n                <Button fullWidth type={'submit'} color={'secondary'} variant={'contained'} onClick={() => onSubmitForm(undefined)}>\n                    {'Search'}\n                </Button>\n            </Box>\n        </form>\n    )\n\n}\n\nexport default DatasetsForm\n","import React, { CSSProperties, useState, FC } from 'react';\nimport { Grid, Tooltip } from '@material-ui/core';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport Clipboard from 'react-clipboard.js';\n\nconst disabledStyle = {\n  // borderBottom: '1px solid #cfdbe2',\n  color: '#cfdbe2',\n  cursor: 'no-drop',\n};\n\nconst enabledStyle = {\n  // borderBottom: '1px solid #0b4566',\n  color: '#0b4566',\n  cursor: 'pointer',\n};\n\nexport type CopyToClipboardProps = {\n  disabled?: boolean;\n  helperText?: string;\n  url?: boolean;\n  message?: string;\n  style?: CSSProperties,\n  className?: string | undefined\n};\n\nexport const mockCopy: VoidFunction = () => {\n  // call this function\n};\n\nconst CopyToClipboard: FC<CopyToClipboardProps> = ({\n  disabled = false,\n  helperText = '',\n  message = '',\n  style = {},\n  className\n}) => {\n  const [copyUrl] = useState(window.location.href);\n  const [tooltip, setTooltip] = useState(\n    helperText ? helperText : message ? 'Copy text' : 'Copy URL'\n  );\n\n  const copyAction = () => {\n    // mockCopy();\n    if (message) {\n      setTooltip('Text copied to Clipboard.');\n      setTimeout(() => {\n        setTooltip(helperText ? helperText : 'Copy text');\n      }, 5000);\n    } else {\n      setTooltip('URL copied to Clipboard.');\n      setTimeout(() => {\n        setTooltip(helperText ? helperText : 'Copy URL');\n      }, 5000);\n    }\n  };\n\n  const copy = () => {\n    if (disabled !== true) copyAction();\n  };\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      justify=\"space-between\"\n      alignItems=\"flex-end\"\n      \n      style={disabled === true ? { ...style, ...disabledStyle } : { ...style, ...enabledStyle }}\n      onClick={() => copy()}\n    >\n      <Grid item>\n        <Grid container alignItems=\"center\" justify=\"center\">\n          <Clipboard\n            data-clipboard-text={message ? message : copyUrl}\n            className=\"copy-clipboard\"\n            style={{ background: 'none', border: '0px', outline: 'none' }}\n          >\n            <Tooltip title={tooltip}>\n              <FileCopyOutlinedIcon\n                color=\"primary\"\n                className={className}\n              />\n            </Tooltip>\n          </Clipboard>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CopyToClipboard;\n","import React, { FC } from 'react'\nimport { Box, TableRow, TableCell, Grid, Collapse, Typography, Link } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ResponseMetadata200 } from \"../common/data/getData\"\nimport CopyToClipboard from \"../common/components/CopyToClipboard\"\n\nconst useStyles = makeStyles(() => ({\n    imagePreview: {\n        height: '90%',\n        width: 'auto'\n    },\n    codeContainer: {\n        backgroundColor: '#F8F8F8', \n        overflowX: 'auto', \n        width: 'fit-content', \n        maxWidth: '100%'\n    },\n    codeContainerText: {\n        color: '#557A8F',\n        fontSize: 11\n    },\n    copyTooltip: {\n        cursor: 'pointer'\n    },\n    tableCell: {\n        padding: 0,\n    },\n    metadataLink: {\n        fontSize: 10,\n        color: '#86A2B3',\n    }\n}))\n\ninterface Props {\n    host: string,\n    page: number,\n    limit: number,\n    i: number,\n    activeDataset?: number,\n    dataset: ResponseMetadata200,\n    datasetUrl?: string\n}\nconst DatasetPreview: FC<Props> = ({\n    host,\n    page,\n    limit,\n    i,\n    activeDataset,\n    dataset,\n    datasetUrl\n}) => {\n\n    const classes = useStyles()\n\n    const returnJson = (dataset: ResponseMetadata200) => Object.keys(dataset).reduce(\n        (acc: string[], keyItem: string, j: number) => \n           {\n                const neededKeys = ['mean', 'range', 'stdev', 'valid_percentage'];\n                if(neededKeys.includes(keyItem)){\n                    if(keyItem === 'range'){\n                        const buildStr = `  ${keyItem}: [${dataset[keyItem]}],\\n`\n                        acc = [...acc, buildStr]\n                    }else{\n                        const buildStr = `  ${keyItem}: ${dataset[keyItem]},\\n`\n                        acc = [...acc, buildStr]\n                    }\n                \n                }\n\n            return acc\n           }, []).join('')\n\n    return (\n        <TableRow>\n            <TableCell className={classes.tableCell} colSpan={8}>\n                <Collapse in={page * limit + i === activeDataset} timeout=\"auto\" unmountOnExit>\n                    {\n                        datasetUrl && (\n\n                        <Box p={1} className={classes.codeContainer}>\n                            <Box width={1} display={'flex'} alignItems={'center'}>\n                                <Typography className={classes.codeContainerText}>\n                                    <code>\n                                        {'Raster url\\n'}\n                                    </code>\n                                </Typography>\n                                <Box>\n                                    <CopyToClipboard className={classes.copyTooltip} helperText={'Copy to clipboard'} message={datasetUrl}/>\n                                </Box>\n                            </Box>\n                            <code style={{ wordBreak: 'break-all' }}>\n                                {datasetUrl}\n                            </code>\n                        </Box>\n                        )\n                    }\n                    <Box my={1}>\n                        <Grid container alignItems={'center'}>\n                            <Grid item xs={6}>\n                                <Box p={1} className={classes.codeContainer}>\n                                <Typography className={classes.codeContainerText}>\n                                    <code>\n                                        {'Metadata'}\n                                        \n                                    </code>\n                                </Typography>\n                                    <code style={{ whiteSpace: 'pre' }}>\n                                        {'{\\n'}\n                                        {returnJson(dataset)}\n                                        {'}\\n'}\n                                    </code>\n                                    <Link \n                                        target={'_blank'} \n                                        href={`${host}/metadata${Object.keys(dataset.keys).map((keyItem: string) => `/${dataset.keys[keyItem]}`).join('')}`}\n                                        className={classes.metadataLink}\n                                    >\n                                        {'View full metadata\\n'}\n                                    </Link>\n                                </Box>\n                                \n                            </Grid>\n                            <Grid \n                                item \n                                xs={6} \n                                container\n                                justify={'center'}\n                                alignItems={'center'}\n                            >\n                                <Box p={1}>\n                                    <img\n                                        src={`${host}/singleband/${Object.keys(dataset.keys).map((datasetKey: string) => `${dataset.keys[datasetKey]}/`).join('')}preview.png?tile_size=[128,128]`} \n                                        alt={'TC-preview'}\n                                        className={classes.imagePreview}\n                                        loading={'eager'}\n                                    />\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Collapse>\n            </TableCell>\n        </TableRow>\n    )\n\n}\n\nexport default DatasetPreview\n","import React, { useState, useEffect } from 'react';\nimport { Slider as MSlider, Box, Grid, Typography, TextField } from '@material-ui/core';\n\ntype SliderProps = {\n  /**\n   * Default values of the slider in format `[min, max]` or `number`.\n   */\n  defaultValue: number[] | number;\n  title?: string | undefined;\n  min?: number | undefined;\n  max?: number | undefined;\n  step?: number | undefined;\n  /**\n   * Get the value while using the slider thumb.\n   */\n  getValue?: (val: number | number[]) => void;\n  /**\n   * Get the value once you release the slider thumb.\n   */\n  getValueCommitted?: (val: number | number[]) => void;\n  /**\n   * *Requires `title` prop. Counted in `rem` units.\n   */\n  sliderMarginLeft?: number | undefined;\n  noNumbers?: boolean | undefined;\n  /**\n   * Append a unit at the end of the values. (%, /10, £, $)\n   */\n  unit?: string | undefined;\n  disabled?: boolean\n};\n\nconst Slider: React.FC<SliderProps> = ({\n  defaultValue = [0, 1],\n  title,\n  min = 0,\n  max = 1,\n  step = 0.01,\n  getValue,\n  getValueCommitted,\n  sliderMarginLeft = 1,\n  noNumbers = false,\n  unit = '',\n  disabled\n}) => {\n  const [value, setValue] = useState(defaultValue);\n\n  const handleChange = (newValue: number | number[]) => {\n\n    setValue(newValue);\n    getValue && getValue(newValue);\n\n  };\n\n  useEffect(() => {\n    \n    setValue(defaultValue)\n\n  }, [defaultValue])\n\n  useEffect(() => {\n\n  }, [min, max])\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n      justify=\"center\"\n      wrap=\"nowrap\"\n    >\n      {title && (\n        <Box>\n          <Grid\n            container\n            alignItems=\"center\"\n            style={{\n              height: '100%',\n              marginRight: noNumbers ? '1rem' : '0rem',\n            }}\n          >\n            <Typography variant=\"h5\">{title}</Typography>\n          </Grid>\n        </Box>\n      )}\n      {!noNumbers && Array.isArray(value) && typeof value[0] === 'number' && (\n        <Box style={{ marginLeft: title ? `${sliderMarginLeft}rem` : '0rem' }}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ height: '100%', maxWidth: '8rem' }}\n          >\n            <TextField \n              fullWidth\n              type={'number'}\n              variant={'standard'}\n              value={value[0]}\n              onChange={(e) => getValueCommitted && getValueCommitted([Number(e.target.value), value[1]])}\n            />\n          </Grid>\n        </Box>\n      )}\n\n      <MSlider\n        style={{ margin: '0rem .6rem', width: '100%' }}\n        value={value}\n        min={min}\n        step={step}\n        max={max}\n        scale={(x) => x / 10}\n        onChange={(e, val) => handleChange(val)}\n        onChangeCommitted={(e, val) =>\n          getValueCommitted && getValueCommitted(val)\n        }\n        valueLabelDisplay=\"off\"\n        disabled={disabled}\n      />\n      {!noNumbers && Array.isArray(value) && (\n        <Box>\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ height: '100%', maxWidth: '8rem' }}\n          >\n            <TextField \n              fullWidth\n              type={'number'}\n              variant={'standard'}\n              value={value[1] || (!Array.isArray(value) && (value as number))}\n              onChange={(e) => getValueCommitted && getValueCommitted([value[0], Number(e.target.value)])}\n            />\n            {/* <Typography variant=\"body2\">\n              {`${}${unit}`}\n            </Typography> */}\n          </Grid>\n        </Box>\n      )}\n    </Grid>\n  );\n};\n\nexport default Slider;\n","export interface Colormap {\n    displayName: string,\n    id: string,\n    img_url: string\n}\n\nconst COLORMAPS: Colormap[] = [\n    { \n        displayName: 'Greys', \n        id: 'greys', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-greys-bar.png' \n    },\n    { \n        displayName: 'Gray', \n        id: 'gray', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gray-bar.png' \n    },\n    { \n        displayName: 'Binary', \n        id: 'binary', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-binary-bar.png' \n    },\n    { \n        displayName: 'Bone', \n        id: 'bone', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-bone-bar.png'\n    },\n    { \n        displayName: 'Cloud', \n        id: 'cloud', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-cloud-bar.png' \n    },\n    { \n        displayName: 'Blues', \n        id: 'blues', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-blues-bar.png'\n    },\n    { \n        displayName: 'Viridis', \n        id: 'viridis', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-viridis-bar.png' \n    },\n    { \n        displayName: 'Cividis', \n        id: 'cividis', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-cividis-bar.png' \n    },\n    { \n        displayName: 'Magma', \n        id: 'magma', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-magma-bar.png' \n    },\n    { \n        displayName: 'Ocean', \n        id: 'ocean', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-ocean-bar.png' \n    },\n    { \n        displayName: 'Afmhot', \n        id: 'afmhot', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-afmhot-bar.png' \n    },\n    { \n        displayName: 'Hot', \n        id: 'hot', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-hot-bar.png' \n    },\n    { \n        displayName: 'Inferno', \n        id: 'inferno', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-inferno-bar.png' \n    },\n    { \n        displayName: 'Plasma', \n        id: 'plasma', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-plasma-bar.png' \n    },\n    { \n        displayName: 'Spring', \n        id: 'spring', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-spring-bar.png' \n    },\n    { \n        displayName: 'Summer', \n        id: 'summer', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-summer-bar.png' \n    },\n    { \n        displayName: 'Autumn', \n        id: 'autumn', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-autumn-bar.png' \n    },\n    { \n        displayName: 'Winter', \n        id: 'winter', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-winter-bar.png' \n    },\n    { \n        displayName: 'Wistia', \n        id: 'wistia', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-wistia-bar.png' \n    },\n    { \n        displayName: 'Terrain', \n        id: 'terrain', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-terrain-bar.png' \n    },\n    { \n        displayName: 'Twilight', \n        id: 'twilight', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-twilight-bar.png' \n    },\n    { \n        displayName: 'Twilight_shifted', \n        id: 'twilight_shifted', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-twilight_shifted-bar.png' \n    },\n    { \n        displayName: 'Ylgn', \n        id: 'ylgn', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-ylgn-bar.png' \n    },\n    { \n        displayName: 'Brbg', \n        id: 'brbg', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-brbg-bar.png' \n    },\n    { \n        displayName: 'Brg', \n        id: 'brg', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-brg-bar.png' \n    },\n    { \n        displayName: 'Bugn', \n        id: 'bugn', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-bugn-bar.png' \n    },\n    { \n        displayName: 'Bupu', \n        id: 'bupu', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-bupu-bar.png' \n    },\n    { \n        displayName: 'Bwr', \n        id: 'bwr', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-bwr-bar.png' \n    },\n    { \n        displayName: 'Gnbu',\n        id: 'gnbu', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gnbu-bar.png' \n    },\n    { \n        displayName: 'Orrd', \n        id: 'orrd', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-orrd-bar.png' \n    },\n    { \n        displayName: 'Piyg', \n        id: 'piyg', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-piyg-bar.png' \n    },\n    { \n        displayName: 'Prgn', \n        id: 'prgn', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-prgn-bar.png' \n    },\n    { \n        displayName: 'Pubu', \n        id: 'pubu', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-pubu-bar.png' \n    },\n    { \n        displayName: 'Puor', \n        id: 'puor', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-puor-bar.png' \n    },\n    {\n        displayName: 'Purd', \n        id: 'purd', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-purd-bar.png' \n    },\n    { \n        displayName: 'Pubugn', \n        id: 'pubugn', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-pubugn-bar.png' \n    },\n    { \n        displayName: 'Rdbu', \n        id: 'rdbu', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-rdbu-bar.png' \n    },\n    { \n        displayName: 'Rdgy', \n        id: 'rdgy', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-rdgy-bar.png' \n    },\n    { \n        displayName: 'Rdpu', \n        id: 'rdpu', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-rdpu-bar.png' \n    },\n    { \n        displayName: 'Rdylbu', \n        id: 'rdylbu', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-rdylbu-bar.png' \n    },\n    { \n        displayName: 'Ylgnbu', \n        id: 'ylgnbu', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-ylgnbu-bar.png' \n    },\n    { \n        displayName: 'Ylorbr', \n        id: 'ylorbr', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-ylorbr-bar.png' \n    },\n    { \n        displayName: 'Ylorrd', \n        id: 'ylorrd', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-ylorrd-bar.png' \n    },\n    { \n        displayName: 'Rdylgn', \n        id: 'rdylgn', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-rdylgn-bar.png' \n    },\n    { \n        displayName: 'Greens', \n        id: 'greens', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-greens-bar.png' \n    },\n    { \n        displayName: 'Pink', \n        id: 'pink', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-pink-bar.png' \n    },\n    { \n        displayName: 'Oranges', \n        id: 'oranges', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-oranges-bar.png' \n    },\n    { \n        displayName: 'Purples', \n        id: 'purples', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-purples-bar.png' \n    },\n    { \n        displayName: 'Reds', \n        id: 'reds', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-reds-bar.png' \n    },\n    { \n        displayName: 'Rainbow', \n        id: 'rainbow', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-rainbow-bar.png' \n    },\n    { \n        displayName: 'Gnuplot', \n        id: 'gnuplot', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gnuplot-bar.png' \n    },\n    { \n        displayName: 'Gnuplot2', \n        id: 'gnuplot2', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gnuplot2-bar.png' \n    },\n    { \n        displayName: 'Cmrmap', \n        id: 'cmrmap', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-cmrmap-bar.png' \n    },\n    { \n        displayName: 'Cool', \n        id: 'cool', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-cool-bar.png' \n    },\n    { \n        displayName: 'Coolwarm', \n        id: 'coolwarm', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-coolwarm-bar.png' \n    },\n    { \n        displayName: 'Copper', \n        id: 'copper', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-copper-bar.png' \n    },\n    { \n        displayName: 'Cubehelix', \n        id: 'cubehelix', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-cubehelix-bar.png' \n    },\n    { \n        displayName: 'Seismic', \n        id: 'seismic', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-seismic-bar.png' \n    },\n    { \n        displayName: 'Accent', \n        id: 'accent', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-accent-bar.png' \n    },\n    { \n        displayName: 'Dark2', \n        id: 'dark2', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-dark2-bar.png' \n    },\n    { \n        displayName: 'Flag', \n        id: 'flag', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-flag-bar.png' \n    },\n    { \n        displayName: 'Prism', \n        id: 'prism', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-prism-bar.png' \n    },\n    { \n        displayName: 'Paired', \n        id: 'paired', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-paired-bar.png' \n    },\n    { \n        displayName: 'Pastel1', \n        id: 'pastel1', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-pastel1-bar.png' \n    },\n    { \n        displayName: 'Pastel2', \n        id: 'pastel2', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-pastel2-bar.png' \n    },\n    { \n        displayName: 'Set1', \n        id: 'set1', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-set1-bar.png' \n    },\n    { \n        displayName: 'Set2', \n        id: 'set2', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-set2-bar.png' \n    },\n    { \n        displayName: 'Set3', \n        id: 'set3', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-set3-bar.png' \n    },\n    { \n        displayName: 'Tab10', \n        id: 'tab10', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-tab10-bar.png' \n    },\n    { \n        displayName: 'Tab20', \n        id: 'tab20', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-tab20-bar.png' \n    },\n    { \n        displayName: 'Tab20b', \n        id: 'tab20b', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-tab20b-bar.png' \n    },\n    { \n        displayName: 'Tab20c', \n        id: 'tab20c', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-tab20c-bar.png' \n    },\n    { \n        displayName: 'Gist_earth', \n        id: 'gist_earth', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gist_earth-bar.png' \n    },\n    { \n        displayName: 'Gist_heat', \n        id: 'gist_heat', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gist_heat-bar.png' \n    },\n    { \n        displayName: 'Gist_ncar', \n        id: 'gist_ncar', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gist_ncar-bar.png' \n    },\n    { \n        displayName: 'Gist_rainbow', \n        id: 'gist_rainbow', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gist_rainbow-bar.png' \n    },\n    { \n        displayName: 'Gist_stern', \n        id: 'gist_stern', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gist_stern-bar.png' \n    },\n    { \n        displayName: 'Gist_gray', \n        id: 'gist_gray', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gist_gray-bar.png' \n    },\n    { \n        displayName: 'Gist_yarg', \n        id: 'gist_yarg', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-gist_yarg-bar.png' \n    },\n    { \n        displayName: 'Hsv', \n        id: 'hsv', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-hsv-bar.png' \n    },\n    { \n        displayName: 'Jet', \n        id: 'jet', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-jet-bar.png' \n    },\n    { \n        displayName: 'Nipy_spectral', \n        id: 'nipy_spectral', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-nipy_spectral-bar.png'\n    },\n    { \n        displayName: 'Sepctral', \n        id: 'spectral', \n        img_url: 'https://terracotta-python.readthedocs.io/en/latest/_images/cmap-spectral-bar.png' \n    },\n    \n]\n\nexport default COLORMAPS;","import * as React from 'react';\r\nimport { Box, TextField } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inputBox: {\r\n    width: '10%',\r\n    minWidth: 50\r\n  }\r\n}))\r\n\r\nconst colorbarStyle = {\r\n  width: '100%',\r\n  height: 6,\r\n  borderRadius: 4,\r\n};\r\n\r\nexport type LegendProps = {\r\n  src: string;\r\n  /**\r\n   * *Only relevant when `range` is present. Represents the amount of ticks distributed between min/max values(including them).\r\n   */\r\n  length?: number | undefined;\r\n  /**\r\n   * Min/Max range for the Legend ticks.\r\n   */\r\n  range?: number[] | string[] | undefined;\r\n  /**\r\n   * Append a unit at the end of the values. (%, °C, £, $)\r\n   */\r\n  unit?: string | undefined;\r\n  onGetRange: (val: number[]) => void\r\n};\r\n\r\nconst Legend: React.FC<LegendProps> = ({ src, range, onGetRange }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Box style={{ width: '100%' }}>\r\n      <img src={src} alt=\"\" style={colorbarStyle} />\r\n      {\r\n        range?.[0] !== undefined &&\r\n        range?.[1] !== undefined && (\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Box className={classes.inputBox}>\r\n              <TextField \r\n                fullWidth\r\n                type={'number'}\r\n                variant={'standard'}\r\n                value={range[0]}\r\n                onChange={(e) => onGetRange([Number(e.target.value), Number(range[1])])}\r\n              />\r\n            </Box>\r\n            <Box className={classes.inputBox}>\r\n              <TextField \r\n                fullWidth\r\n                type={'number'}\r\n                variant={'standard'}\r\n                value={range[1]}\r\n                onChange={(e) => onGetRange([Number(range[0]), Number(e.target.value)])}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        )\r\n      }\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Legend;\r\n","import React, { FC, useState, useContext, useEffect } from 'react'\nimport { \n    Box, \n    FormControl, \n    Select, \n    MenuItem, \n    InputLabel, \n    Grid \n} from '@material-ui/core'\nimport AppContext from \"./../AppContext\"\nimport Slider from \"../common/components/Slider\"\nimport COLORMAPS, { Colormap } from \"./colormaps\"\nimport Legend from '../common/components/Legend'\n\nconst SinglebandSelector: FC = () => {\n    const {\n        state: { \n            colormap,\n            activeDataset,\n            page,\n            limit,\n            datasets,\n            activeSinglebandRange\n        },\n        actions: {\n            setColormap,\n            setActiveSinglebandRange\n        }\n    } = useContext(AppContext)\n\n    const minRange = activeDataset !== undefined && datasets?.[activeDataset - page * limit]?.range[0]\n    const maxRange = activeDataset !== undefined && datasets?.[activeDataset - page * limit]?.range[1]\n\n    const [ localRange, setLocalRange ] = useState(activeSinglebandRange)\n    const onSetColormap = (colorId: string) => {\n\n        const colormapObj = COLORMAPS.find((item: Colormap) => item.id === colorId)\n        if(colormapObj) setColormap(colormapObj)\n        \n    }\n\n    const onSetRangeValue = (range: number[]) => {\n        setActiveSinglebandRange(range)\n    }\n\n    useEffect(() => {\n\n        activeSinglebandRange && setLocalRange(activeSinglebandRange)\n\n    }, [activeSinglebandRange])\n\n    return (\n        <Grid container alignItems={'center'}>\n            <Grid item xs={4}>\n                <FormControl fullWidth>\n                    <InputLabel>\n                        {'Colormap'}\n                    </InputLabel>\n                    <Select\n                        id=\"demo-simple-select-outlined\"\n                        value={colormap.id}\n                        onChange={(e) => onSetColormap(String(e.target.value))}\n                        fullWidth\n                    >\n                        {\n                            COLORMAPS.map((option: Colormap, i: number) => (\n                                <MenuItem key={`limit-${option.id}`} value={option.id}>{option.displayName}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={8}>\n                <Box mx={4}>\n                    {\n                        datasets && \n                        activeSinglebandRange !== undefined && \n                        activeDataset !== undefined &&\n                        (\n                        <>\n                            <Slider \n                                noNumbers \n                                getValueCommitted={value => Array.isArray(value) && onSetRangeValue(value)} \n                                getValue={(value: number | number[]) => Array.isArray(value) && setLocalRange(value)}\n                                defaultValue={activeSinglebandRange} \n                                min={minRange || 0} \n                                max={maxRange || 0} \n                                step={0.01} \n                                title={'Contrast '}\n                                disabled={minRange === maxRange}\n                            />\n                            <Legend \n                                src={colormap.img_url} \n                                range={localRange}\n                                length={2}\n                                onGetRange={(val) => setActiveSinglebandRange(val)}\n                            />\n                        </>\n                        )\n                    }\n                </Box>\n            </Grid>\n        </Grid>\n    )\n\n}\n\nexport default SinglebandSelector\n","import React, { FC, useEffect, useState } from 'react'\nimport { Box, Grid, FormControl, Select, MenuItem, InputLabel } from '@material-ui/core'\nimport Slider from \"../common/components/Slider\"\n\ninterface Props {\n    options?: string[],\n    selectValue?: string,\n    onGetSelectValue: (val: string) => void,\n    sliderValue: number[],\n    onGetSliderValue: (val: number[]) => void,\n    min: number,\n    max: number,\n    title: string,\n    step: number\n}\n\nconst RGBSlider: FC<Props> = ({\n    options,\n    selectValue,\n    onGetSliderValue,\n    onGetSelectValue,\n    min,\n    max,\n    sliderValue,\n    title,\n    step\n}) => {\n    const [ localRange, setLocalRange ] = useState(sliderValue)\n    useEffect(() => {\n        setLocalRange(sliderValue)\n    }, [sliderValue])\n    return (\n        <Grid container alignItems={'center'}>\n            <Grid container item xs={2} alignItems={'center'}>\n                <FormControl fullWidth style={{ display: 'flex', alignItems: 'center' }}>\n                    <InputLabel style={{ fontSize: 10 }}>\n                        {'Band'}\n                    </InputLabel>\n                    <Select\n                        id=\"demo-simple-select-outlined\"\n                        value={selectValue || ''}\n                        onChange={(e) => onGetSelectValue(String(e.target.value))}\n                        fullWidth\n                    >\n                        {\n                            options?.map((option: string) => (\n                                <MenuItem key={`limit-${option}`} value={option}>{option}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid container item xs={10} alignItems={'center'}>\n                <Box ml={2} mt={2} width={1}>\n                    <Slider \n                        getValueCommitted={value => Array.isArray(value) && onGetSliderValue(value)} \n                        getValue={(value: number | number[]) => Array.isArray(value) && setLocalRange(value)}\n                        defaultValue={localRange} \n                        min={min} \n                        max={max} \n                        step={step} \n                        title={title}\n                    />\n                </Box>\n            </Grid>\n        </Grid>\n    )\n\n}\n\nexport default RGBSlider\n","import React, { FC, useContext, useEffect } from 'react'\nimport { \n    Box, \n} from '@material-ui/core'\nimport AppContext, { activeRGBSelectorRange } from \"./../AppContext\"\nimport RGBSlider from \"./RGBSlider\"\n\nconst RGBSelector: FC = () => {\n    const {\n        state: { \n            datasetBands,\n            activeRGB,\n            activeDataset,\n            datasets,\n            page,\n            limit\n        },\n        actions: {\n            setActiveRGB\n        }\n    } = useContext(AppContext)\n\n    useEffect(() => {\n\n    }, [])\n\n    const datasetPageRange = activeDataset !== undefined && datasets?.[activeDataset - page * limit]?.range\n    const minRange = datasetPageRange && datasetPageRange[0]\n    const maxRange = datasetPageRange && datasetPageRange[1]\n    \n    const onGetBandValue = (val: string, bandKey: string) => {\n        setActiveRGB((activeRGB: activeRGBSelectorRange) => activeRGB && {\n            ...activeRGB,\n            [ bandKey ]: { band: val, range: activeRGB[bandKey].range }\n        })\n    }\n\n    const onGetSliderValue = (val: number[], sliderKey: string) => {\n        setActiveRGB((activeRGB: activeRGBSelectorRange) => activeRGB && {\n            ...activeRGB,\n            [ sliderKey ]: { range: val, band: activeRGB[sliderKey].band }\n        })\n    }\n\n    return (\n        <Box>\n            {\n                datasetBands && activeRGB && (\n                    Object.keys(activeRGB).map((color: string) => (\n                        <RGBSlider \n                            key={`rgb-slider-${color}`}\n                            options={datasetBands}\n                            max={Number(maxRange)}\n                            min={Number(minRange)}\n                            sliderValue={[Number(activeRGB[color].range?.[0]), Number(activeRGB[color].range?.[1])]}\n                            title={color + ':'}\n                            selectValue={activeRGB[color].band}\n                            onGetSelectValue={(val) => onGetBandValue(val, color)}\n                            onGetSliderValue={(val) => onGetSliderValue(val, color)}\n                            step={0.01}\n                        />\n                    ))\n                )\n            }\n        </Box>\n    )\n\n}\n\nexport default RGBSelector\n","export type Endpoint = { id: string }\n\nconst endpoints: Endpoint[] = [\n    {\n        id: 'rgb'\n    },\n    {\n        id: 'singleband'\n    }\n]\n\nexport default endpoints","import React, { FC, useContext } from 'react'\nimport { Box, Typography, Collapse, FormControl, Select, MenuItem } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport SinglebandSelector from \"./SinglebandSelector\"\nimport RGBSelector from \"./RGBSelector\"\nimport AppContext from \"./../AppContext\"\nimport endpoints, { Endpoint } from \"./endpoints\"\n\nconst useStyles = makeStyles(() => ({\n    wrapper: {\n\t\tmargin: 16,\n        paddingBottom: 16,\n\t\tbackgroundColor: '#FFFFFF',\n\t\tborderBottom: '1px solid #86A2B3'\n\t},\n    rgbText: {\n        fontSize: 12,\n        marginRight: 6\n    }\n}))\n\nconst DatasetsColormap: FC = () => {\n\n    const {\n        state: { \n            activeDataset,\n            activeEndpoint\n        },\n        actions: {\n            setActiveEndpoint\n        }\n    } = useContext(AppContext)\n\n    const classes = useStyles()\n\n    return (\n            <Collapse in={activeDataset !== undefined} timeout=\"auto\" unmountOnExit>\n                <Box className={classes.wrapper}>\n                    <Box \n                        display={'flex'} \n                        alignItems={'center'} \n                        mb={1}\n                        justifyContent={'space-between'}\n                    >\n                        <Typography variant={'body1'}>\n                            {'Customize layer'}\n                        </Typography>\n                        <Box display={'flex'} alignItems={'center'} style={{ minWidth: 100 }}>\n                            <FormControl fullWidth>\n                                <Select\n                                    id=\"demo-simple-select-outlined\"\n                                    value={activeEndpoint}\n                                    onChange={(e) => setActiveEndpoint(String(e.target.value))}\n                                    fullWidth\n                                >\n                                    {\n                                        endpoints.map((option: Endpoint) => (\n                                            <MenuItem key={`endpoint-${option.id}`} value={option.id}>{option.id}</MenuItem>\n                                        ))\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </Box>\n                        {\n                            activeEndpoint === 'singleband' &&  <SinglebandSelector />\n                        }\n                        {\n                            activeEndpoint === 'rgb' &&  <RGBSelector />\n                        }\n                </Box>\n            </Collapse>\n    )\n\n}\n\nexport default DatasetsColormap\n","import React, { FC, useState, useEffect, useContext, Fragment } from 'react'\nimport { \n    Table, \n    TableBody, \n    TableCell, \n    TableContainer, \n    TableHead, \n    TableRow as MuiTableRow, \n    Typography,\n    Box,\n} from '@material-ui/core'\nimport AppContext, { activeRGBSelectorRange } from \"../AppContext\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport \n    getData, \n    { \n        ResponseDatasets, \n        DatasetItem, \n        ResponseMetadata200, \n        ResponseKeys,\n        KeyItem\n} from \"../common/data/getData\"\nimport SidebarItemWrapper from \"../sidebar/SidebarItemWrapper\"\nimport TablePagination from \"./TablePagination\"\nimport TableRow from \"./TableRow\"\nimport DatasetsForm from \"./DatasetsForm\"\nimport DatasetPreview from \"./DatasetPreview\"\nimport DatasetsColormap from \"../colormap/DatasetsColormap\"\nimport { defaultRGB } from \"../App\"\n\n\nconst useStyles = makeStyles(() => ({\n    wrapper: {\n\t\tmargin: 16,\n        paddingBottom: 16,\n\t\tbackgroundColor: '#FFFFFF',\n\t\tborderBottom: '1px solid #86A2B3',\n\t},\n    table: {\n        marginTop: '1rem',\n        width: \"100%\",\n        overflowX: 'auto',\n        overflowY: 'auto',\n        maxHeight: 515\n    },\n    tableHeadTypography: {\n        fontWeight: 'bold',\n    },\n    tableCell: {\n        padding: 6\n    },\n\n}))\n\ninterface Props {\n    host: string\n}\n\nconst limitOptions = [ 15, 25, 50, 100 ]\n\nconst SidebarDatasetsItem: FC<Props> = ({\n    host\n}) => {\n    const classes = useStyles()\n    const {\n        state: { \n            keys, \n            datasets, \n            activeDataset, \n            limit, \n            page,\n            activeSinglebandRange,\n            colormap,\n            activeEndpoint,\n            activeRGB,\n            selectedDatasetRasterUrl\n        },\n        actions: { \n            setKeys, \n            setHoveredDataset, \n            setDatasets, \n            setActiveDataset, \n            setSelectedDatasetRasterUrl,\n            setLimit,\n            setPage,\n            setActiveSinglebandRange,\n            setActiveRGB,\n            setDatasetBands\n        }\n    } = useContext(AppContext)\n\n    const [ queryFields, setQueryFields ] = useState<string | undefined>(undefined)\n    const [ isLoading, setIsLoading ] = useState<boolean>(true)\n\n    const getDatasets = async (host: string, pageRef: number, limitRef: number, queryString: string = '') => {\n\n        const response = await getData(`${host}/datasets?limit=${limitRef}&page=${pageRef}${queryString}`)\n        const datasetsResponse = response as ResponseDatasets | undefined\n        if(datasetsResponse && datasetsResponse.hasOwnProperty('datasets') && Array.isArray(datasetsResponse.datasets)){\n           \n            if(datasetsResponse.datasets[0]){\n                \n                const metadataResponsesPreFetch: unknown = datasetsResponse.datasets.map(\n                    async (dataset: DatasetItem) => {\n                        const buildMetadataUrl = Object.keys(dataset).map((keyItem: string) => `/${dataset[keyItem]}`).join('')\n                        const preFetchData = await fetch(`${host}/metadata${buildMetadataUrl}`)\n                        return preFetchData.json()\n                    })\n\n                    const metadataResponses = await Promise.all(metadataResponsesPreFetch as Iterable<unknown>)\n                    const typedMetadataResponses = metadataResponses as ResponseMetadata200[]\n                    setDatasets(typedMetadataResponses)\n\n            }else{\n\n                setDatasets(datasetsResponse.datasets)\n\n            }\n\n        }\n\n        setIsLoading(false)\n    }\n\n    const getKeys = async (host: string) => {\n\n        const response = await getData(`${host}/keys`)\n        let keysReponse = response as ResponseKeys | undefined\n\n        if(keysReponse && keysReponse.hasOwnProperty('keys') && Array.isArray(keysReponse.keys)){\n            \n            keysReponse.keys = keysReponse.keys.map((item: KeyItem) => ({ ...item, key: item.key[0].toUpperCase() + item.key.substring(1, item.key.length ) }))\n            setKeys(keysReponse.keys)\n            \n        }\n\n    \n    }\n\n    const onHandleRow = (index: number) => {\n        \n        const actualIndex = page * limit + index;\n        setActiveRGB(defaultRGB)\n        if(activeDataset === actualIndex){\n\n            setActiveDataset(undefined)\n            setSelectedDatasetRasterUrl(undefined)\n            setActiveSinglebandRange(undefined)\n\n        }else{\n\n            const dataset = datasets?.[index]\n            setActiveDataset(actualIndex)\n\n            if(dataset){\n\n                const { percentiles } = dataset\n                const validRange = [percentiles[5], percentiles[95]]\n                setActiveSinglebandRange(validRange)\n\n            }\n\n        }\n\n    }\n\n    const onSubmitFields = (queryString: string) => {\n        setQueryFields(queryString)\n        setPage(0)\n        setActiveDataset(undefined)\n        setSelectedDatasetRasterUrl(undefined)\n    }\n\n    useEffect(() => {\n\n        setIsLoading(true)\n        void getKeys(host)\n        void getDatasets(host, page, limit, queryFields)\n\n    }, [host, page, limit, queryFields]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    const onGetRGBBands = async (dataset: ResponseMetadata200) => {\n        const noBandKeysURL = `${host}/datasets?` + Object.keys(dataset.keys).map((item: string) => item !== 'band' ? `${item}=${dataset.keys[item]}&` : '' ).join('')\n        const response = await getData(noBandKeysURL) as ResponseDatasets\n\n        if(response?.datasets && activeRGB){\n\n            const { datasets } = response\n            const bands = datasets.map((dataset: DatasetItem) => dataset.band)\n            \n            setActiveRGB((activeRGBLocal: activeRGBSelectorRange) => \n                Object.keys(activeRGBLocal).reduce((acc: any, colorString: string) => {\n\n                    const { percentiles } = dataset\n                    const validRange = [ percentiles[5], percentiles[95] ]\n                    \n                    acc[colorString] = { ...activeRGBLocal[colorString], range: validRange }\n\n                    return acc\n\n                }, {}))\n\n            setDatasetBands(bands)\n\n        }\n    }\n\n\n    useEffect(() => {\n\n        if(activeDataset !== undefined && datasets && activeSinglebandRange){\n\n            setSelectedDatasetRasterUrl(undefined)\n            const dataset = datasets[activeDataset - page * limit]\n            const keysRasterUrl = Object.keys(dataset.keys).map((keyItem: string) => `/${dataset.keys[keyItem]}`).join('') + '/{z}/{x}/{y}.png'\n            \n            if(activeEndpoint === 'singleband'){\n\n                // setActiveRGB(defaultRGB)\n                const buildRasterUrl = `${host}/${activeEndpoint}${keysRasterUrl}?colormap=${colormap.id}&stretch_range=[${activeSinglebandRange}]`\n                setSelectedDatasetRasterUrl(buildRasterUrl)\n\n            }\n\n            if(activeEndpoint === 'rgb'){\n               void onGetRGBBands(dataset)\n            }\n        }\n\n    }, [activeSinglebandRange, colormap, activeDataset, activeEndpoint])  // eslint-disable-line react-hooks/exhaustive-deps\n\n    useEffect(() => {\n\n        if(activeRGB && activeEndpoint === 'rgb' && datasets && activeDataset !== undefined){\n\n            const dataset = datasets[activeDataset - page * limit]\n            const hasValueForBand = Object.keys(activeRGB).every((colorObj) => activeRGB[colorObj].band)\n            const hasValueForRange = Object.keys(activeRGB).every((colorObj) => activeRGB[colorObj].range)\n\n            if(hasValueForBand && hasValueForRange && dataset !== undefined){\n\n                const lastKey = Object.keys(dataset.keys)[Object.keys(dataset.keys).length - 1]\n                const keysRasterUrl = Object.keys(dataset.keys).map((keyItem: string) => keyItem !== lastKey ? `/${dataset.keys[keyItem]}` : '').join('') + '/{z}/{x}/{y}.png'\n                const rgbParams = Object.keys(activeRGB).map((keyItem: string) => `${keyItem.toLowerCase()}=${activeRGB[keyItem].band}&${keyItem.toLowerCase()}_range=[${activeRGB[keyItem].range}]&`).join('')\n                const buildRasterUrl = `${host}/${activeEndpoint}${keysRasterUrl}?${rgbParams}`\n                setSelectedDatasetRasterUrl(buildRasterUrl)\n\n            }\n\n        }\n\n    }, [activeRGB, activeEndpoint, activeDataset, datasets])  // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <SidebarItemWrapper isLoading={isLoading} title={'Search for datasets'}>\n            <Box>\n                {\n                    keys && \n                        <DatasetsForm \n                            keys={keys} \n                            onSubmitFields={onSubmitFields}\n                        />\n                }\n            </Box>\n            <DatasetsColormap />\n            <Box className={classes.table}>\n                <TableContainer onMouseLeave={() => setHoveredDataset(undefined)}>\n                    <Table\n                        aria-labelledby=\"tableTitle\"\n                        size={\"small\"} // medium\n                        aria-label=\"enhanced table\"\n                    >\n                        <TableHead>\n                            <MuiTableRow>\n                                <TableCell className={classes.tableCell} />\n                                {keys && (\n                                    keys.map((datasetKey: KeyItem, i: number) => (\n                                        <TableCell className={classes.tableCell} key={`dataset-key-head-${i}`}>\n                                            <Typography color={'primary'} className={classes.tableHeadTypography} variant={'body2'}>\n                                                {datasetKey.key}\n                                            </Typography>\n                                        </TableCell>\n                                    ))\n                                )}\n                            </MuiTableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                datasets && datasets.map((dataset: ResponseMetadata200, i: number) => (\n                                    <Fragment key={`dataset-${i}`}>\n                                        <TableRow \n                                            dataset={dataset.keys} \n                                            keyVal={`dataset-${i}`} \n                                            checked={page * limit + i === activeDataset}\n                                            onClick={() => onHandleRow(i)}\n                                            onMouseEnter={() => setHoveredDataset(dataset.convex_hull)}\n                                        />\n                                        <DatasetPreview \n                                            activeDataset={activeDataset}\n                                            dataset={dataset}\n                                            host={host}\n                                            i={i}\n                                            limit={limit}\n                                            page={page}\n                                            datasetUrl={selectedDatasetRasterUrl}\n                                        />\n                                    </Fragment>\n                                ))\n                            }\n                            \n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Box>\n            <TablePagination \n                value={limit} \n                options={limitOptions}\n                onGetValue={(val: number) => setLimit(val)}\n                page={page}\n                onGetPage={(val: number) => setPage(val)}\n                disableNext={limit > (datasets?.length || 0)}\n            />\n        </SidebarItemWrapper>\n       \n    )\n\n}\n\nexport default SidebarDatasetsItem\n","import React, { FC, CSSProperties, useContext } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport PublicIcon from '@material-ui/icons/Public';\nimport StreetviewIcon from '@material-ui/icons/Streetview';\nimport { IconButton, Grid, Tooltip } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppContext from '../AppContext';\nimport { Viewport } from \"./types\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n  \tpadding: 0\n  },\n  icon: {\n    backgroundColor: '#fff',\n    height: 36,\n    width: 36,\n    fill: '#0B4566',\n    padding: 6,\n    boxSizing: 'border-box',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      fill: '#FFF',\n    }\n  },\n  activeIcon: {\n    backgroundColor: '#0b4566',\n    '& path': {\n      fill: '#fff',\n    },\n    height: 36,\n    width: 36,\n    padding: 6,\n    boxSizing: 'border-box',\n  },\n}))\n\nconst gridStyle: CSSProperties = {\n\tposition: 'fixed',\n\tleft: 0,\n\ttop: '50%',\n\twidth: 36,\n\tboxShadow: 'rgba(0, 0, 0, 0.16) 4px 0px 4px',\n\tzIndex: 100,\n\ttransform: 'translate(0, -50%)',\n};\n\nconst ZoomControl: FC = () => {\n  const classes = useStyles();\n  const {\n    state: { isOpticalBasemap },\n    actions: { setIsOpticalBasemap, setViewport },\n  } = useContext(AppContext);\n\n  return (\n    <Grid container style={{...gridStyle}}>\n      <Grid container>\n        <Tooltip placement=\"right\" title={'Change base map'}>\n          <IconButton\n            onClick={() => setIsOpticalBasemap(!isOpticalBasemap)}\n\t\t\t      className={classes.iconButton}\n          >\n            {\n              isOpticalBasemap ? <StreetviewIcon className={classes.icon}/> : <PublicIcon className={classes.icon}/>\n            }\n            {/* <PublicIcon\n              className={!isOpticalBasemap ? classes.icon : classes.activeIcon}\n            /> */}\n          </IconButton>\n        </Tooltip>\n      </Grid>\n      <Grid container>\n        <IconButton\n          onClick={() => setViewport((v: Viewport) =>({...v, zoom: Number(v.zoom) + 1}))}\n\t\t  className={classes.iconButton}\n        >\n          <AddIcon className={classes.icon} />\n        </IconButton>\n      </Grid>\n      <Grid container>\n        <IconButton\n          onClick={() => setViewport((v: Viewport) =>({...v, zoom: Number(v.zoom) - 1}))}\n\t\t  className={classes.iconButton}\n        >\n          <RemoveIcon className={classes.icon} />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ZoomControl;\n","import { useState, useEffect } from 'react'\n/* eslint-disable */\nconst getWindowDimensions = () => {\n\n\tconst { clientWidth: width, clientHeight: height } = document.body\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t}\n\n}\n\ninterface ReturnType {\n\twidth: number,\n\theight: number,\n}\nexport default (): ReturnType => {\n\n\tconst [ windowDimensions, setWindowDimensions ] = useState(\n\t\tgetWindowDimensions(),\n\t)\n\n\tuseEffect(() => {\n\n\t\tconst handleResize = () => {\n\n\t\t\tsetWindowDimensions(getWindowDimensions())\n\n\t\t}\n\n\t\twindow.addEventListener('resize', handleResize)\n\n\t\treturn () => window.removeEventListener('resize', handleResize)\n\n\t}, [])\n\n\treturn windowDimensions\n\n}\n","import useWindowDimensions from './useWindowDimensions'\n/* eslint-disable */\nexport default (): boolean => {\n\n\tconst { width } = useWindowDimensions()\n\n\treturn width < 600\n\n}\n","export const regionPaintFill = {\n    'fill-color': '#0b4566',\n    'fill-opacity': 0.1,\n}\n\nexport const regionPaintLine = {\n    'line-color': '#0b4566',\n    'line-width': 2\n}","import React, {\n\tuseEffect, useState, FC, useContext, useRef, RefObject\n} from 'react'\nimport ReactMapGL, { FlyToInterpolator, Source, Layer, WebMercatorViewport } from 'react-map-gl'\nimport ZoomControl from './MapZoomControl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { easeCubicInOut } from 'd3-ease'\nimport useIsMobileWidth from '../common/hooks/useIsMobileWidth'\nimport AppContext from \"../AppContext\"\nimport { Viewport } from \"./types\"\nimport { regionPaintFill, regionPaintLine } from \"./geojsonStyles\"\n\nconst accessToken = 'pk.eyJ1Ijoiam9zbGRoaSIsImEiOiJja2d0ZjdzbXAwMXdxMnNwN2Jkb2NvbXJ3In0.SayFfMYF2huWsZckbqNqEw'\n\ninterface Props {\n\thost?: string\n}\n\nconst Map: FC<Props> = ({ host }) => {\n\n\tconst isMobile = useIsMobileWidth()\n\tconst {\n\t\tstate: { \n\t\t\tisOpticalBasemap, \n\t\t\tviewport, \n\t\t\thoveredDataset, \n\t\t\tdatasets, \n\t\t\tactiveDataset,\n\t\t\tselectedDatasetRasterUrl,\n\t\t\tpage,\n\t\t\tlimit\n\t\t},\n\t\tactions: {\n\t\t\tsetViewport\n\t\t}\n\t} = useContext(AppContext)\n\n\tconst [ localViewport, setLocalViewport ] = useState<Viewport | undefined>(\n\t\tundefined,\n\t)\n\tconst [ localRasterUrl, setLocalRasterUrl ] = useState<undefined | string>(undefined)\n\tconst basemap = isOpticalBasemap ? 'mapbox://styles/mapbox/satellite-v9' : 'mapbox://styles/mapbox/light-v10'\n\n\tconst mapRef: RefObject<HTMLDivElement> | null = useRef(null)\n\n\tuseEffect(() => {\n\n\t\tconst { latitude, longitude, zoom } = viewport\n\t\tsetLocalViewport({\n\t\t\t...{\n\t\t\t\tlongitude,\n\t\t\t\tlatitude,\n\t\t\t\tzoom,\n\t\t\t\ttransitionDuration: 2000,\n\t\t\t\ttransitionInterpolator: new FlyToInterpolator(),\n\t\t\t\ttransitionEasing: easeCubicInOut,\n\t\t\t},\n\t\t})\n\n\n\t}, [ viewport ])\n\n\tuseEffect(() => {\n\t\t\n\t\tsetLocalRasterUrl(undefined)\n\t\tsetTimeout(() => {\n\t\t\tsetLocalRasterUrl(selectedDatasetRasterUrl)\n\t\t}, 200)\n\n\t}, [selectedDatasetRasterUrl])\n\n\tuseEffect(() => {\n\t\tif(activeDataset !== undefined && datasets){\n\t\t\t\n\t\t\tconst pageIndex = activeDataset - page * limit\n\t\t\tconst currentBounds = datasets[pageIndex].bounds\n\n\t\t\tconst formattedBounds: [[number, number], [number, number]] = [\n\t\t\t\t[ currentBounds[ 0 ], currentBounds[ 1 ] ],\n\t\t\t\t[ currentBounds[ 2 ], currentBounds[ 3 ] ],\n\t\t\t]\n\n\t\t\tif (formattedBounds[ 0 ][ 0 ] >= 89) formattedBounds[ 0 ][ 0 ] = 89\n\t\t\tif (formattedBounds[ 0 ][ 1 ] <= -89) formattedBounds[ 0 ][ 1 ] = -89\n\t\t\tif (formattedBounds[ 1 ][ 0 ] >= 179) formattedBounds[ 1 ][ 0 ] = 179\n\t\t\tif (formattedBounds[ 1 ][ 1 ] >= 89) formattedBounds[ 0 ][ 0 ] = 89\n\n\t\t\tif(mapRef.current !== null){\n\t\t\t\tconst mapHeight = mapRef.current?.scrollHeight\n\t\t\t\tconst currentMapWidth = mapRef.current?.scrollWidth\n\n\t\t\t\tif (mapHeight && currentMapWidth) {\n\n\t\t\t\t\tconst viewportBounds = new WebMercatorViewport(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth: currentMapWidth,\n\t\t\t\t\t\t\theight: mapHeight,\n\t\t\t\t\t\t}\n\t\t\t\t\t).fitBounds(formattedBounds, { padding: 40 })\n\n\t\t\t\t\tconst boundsViewportToPass = {\n\t\t\t\t\t\tzoom: viewportBounds.zoom,\n\t\t\t\t\t\tlatitude: viewportBounds.latitude,\n\t\t\t\t\t\tlongitude: viewportBounds.longitude,\n\t\t\t\t\t}\n\n\t\t\t\t\tsetViewport((localViewport: Viewport) => (\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...localViewport,\n\t\t\t\t\t\t\t...boundsViewportToPass,\n\t\t\t\t\t\t}\n\t\t\t\t\t))\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}, [ activeDataset ]) // eslint-disable-line react-hooks/exhaustive-deps\n\n\treturn (\n\t\t<ReactMapGL\n\t\t\t{...localViewport}\n\t\t\twidth={'100%'}\n\t\t\theight={'100%'}\n\t\t\tmapboxApiAccessToken={accessToken}\n\t\t\tmapStyle={basemap}\n\t\t\tonViewportChange={setLocalViewport}\n\t\t>\n\t\t\t{!isMobile && (\n\t\t\t\t<ZoomControl />\n\t\t\t)}\n\t\t\t{\n\t\t\t\thoveredDataset && (\n\t\t\t\t\t<Source\n\t\t\t\t\t\ttype={'geojson'}\n\t\t\t\t\t\tdata={hoveredDataset}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Layer type={'fill'} id={'hovered-dataset-fill'} paint={regionPaintFill}/>\n\t\t\t\t\t\t<Layer type={'line'} id={'hovered-dataset-line'} paint={regionPaintLine}/>\n\t\t\t\t\t</Source>\n\t\t\t\t)\n\t\t\t}\n\t\t\t{\n\t\t\t\tlocalRasterUrl && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Source type=\"raster\" id=\"dataset_raster\" tileSize={256} tiles={[localRasterUrl]}>\n\t\t\t\t\t\t\t<Layer type=\"raster\" id=\"selected-dataset-raster\" source=\"dataset_raster\" paint={{}}/>\n\t\t\t\t\t\t</Source>\n\t\t\t\t\t </>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<div style={{ width: '100%', height: '100%', zIndex: -1 }} ref={mapRef}></div>\n\t\t</ReactMapGL>\n\t)\n\n}\n\nexport default Map\n","import React, { FC, useState, useEffect } from 'react';\nimport { Box } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SidebarContent from \"./sidebar/SidebarContent\"\nimport SidebarTitle from \"./sidebar/SidebarTitle\"\nimport SidebarDatasetsItem from \"./sidebar-datasets/SidebarDatasets\"\nimport Map from \"./map/Map\"\nimport { FlyToInterpolator } from 'react-map-gl'\nimport { easeCubicInOut } from 'd3-ease'\nimport AppContext, { activeRGBSelectorRange } from \"./AppContext\"\nimport { Viewport } from \"./map/types\"\nimport { FeatureDataset } from \"./map/types\"\nimport { ResponseMetadata200, KeyItem } from './common/data/getData';\nimport COLORMAPS, { Colormap } from \"./colormap/colormaps\"\n\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n\t\theight: \"100vh\",\n\t\tmargin: 0,\n\t\tpadding: 0,\n  }\n}))\n\nconst details = 'This applet lets you explore the data on any running Terracotta server. Just search for a dataset to get started!'\n\nconst defaultColormap = COLORMAPS[0]\n\nconst defaultViewport = {\n  latitude: 30.62136584218745,\n\tlongitude: 13.840430671501323,\n\tzoom: 1,\n\tbearing: 0,\n\tpitch: 0,\n\ttransitionDuration: 2000,\n\ttransitionInterpolator: new FlyToInterpolator(),\n\ttransitionEasing: easeCubicInOut,\n}\n\nconst isEnvDev = process.env.REACT_APP_NODE_ENV === 'development'\nconst TC_URL = process.env.REACT_APP_TC_URL\n\nexport const defaultRGB: activeRGBSelectorRange = {\n  R: {\n    band: undefined,\n    range: undefined\n  },\n  G: {\n    band: undefined,\n    range: undefined\n  },\n  B: {\n    band: undefined,\n    range: undefined\n  },\n}\n\ninterface Props {\n  hostnameProp: string | undefined\n}\n\nconst App: FC<Props> = ({ hostnameProp }) => {\n  const [ viewport, setViewport ] = useState<Viewport>(defaultViewport)\n  const [ isOpticalBasemap, setIsOpticalBasemap ] = useState<boolean>(false)\n\n  const [ page, setPage ] = useState<number>(0)\n  const [ limit, setLimit ] = useState<number>(15)\n  const [ hostname, setHostname ] = useState<string | undefined>(undefined)\n  const [ keys, setKeys ] = useState<KeyItem[] | undefined>(undefined)\n  const [ datasets, setDatasets ] = useState<ResponseMetadata200[] | undefined>(undefined)\n  const [ activeDataset, setActiveDataset ] = useState<number | undefined>(undefined)\n  const [ hoveredDataset,  setHoveredDataset ] = useState<FeatureDataset | undefined>(undefined)\n  const [ selectedDatasetRasterUrl, setSelectedDatasetRasterUrl ] = useState<string | undefined>(undefined)\n  const [ colormap, setColormap ] = useState<Colormap>(defaultColormap)\n  const [ activeSinglebandRange, setActiveSinglebandRange ] = useState<[number, number] | undefined>(undefined)\n  const [ activeEndpoint, setActiveEndpoint ] = useState<string>('singleband')\n  const [ activeRGB, setActiveRGB ] = useState<activeRGBSelectorRange | undefined>(defaultRGB)\n  const [ datasetBands, setDatasetBands ] = useState<string[] | undefined>(undefined)\n\n  const classes = useStyles(); \n\n  const initializeApp = (hostname: string | undefined) => {\n    // sanitize hostname\n\n    // when developing, set up your .env in the /app folder with the env. variables:\n    // - REACT_APP_NODE_ENV=development\n    // - REACT_APP_TC_URL= your TC url to develop with\n\n    if(isEnvDev && TC_URL){\n      hostname = TC_URL\n    }\n    \n    if(hostname){\n\n      if (hostname.charAt(hostname.length - 1) === '/') {\n          hostname = hostname.slice(0, hostname.length - 1);\n      }\n\n      setHostname(hostname)\n    \n    }\n    \n}\n\n  useEffect(() => {\n\n    window.onload = initializeApp.bind(null, hostnameProp);\n\n  }, [hostnameProp])\n\n  return (\n    <div className={classes.root}>\n      <AppContext.Provider value={{\n        state: {\n          isOpticalBasemap,\n          viewport,\n          hostname,\n          keys,\n          hoveredDataset,\n          datasets,\n          activeDataset,\n          selectedDatasetRasterUrl,\n          page,\n          limit,\n          colormap,\n          activeSinglebandRange,\n          activeEndpoint,\n          activeRGB,\n          datasetBands\n        },\n        actions: {\n          setIsOpticalBasemap,\n          setViewport,\n          setKeys,\n          setHoveredDataset,\n          setDatasets,\n          setActiveDataset,\n          setSelectedDatasetRasterUrl,\n          setPage,\n          setLimit,\n          setColormap,\n          setActiveSinglebandRange,\n          setActiveEndpoint,\n          setActiveRGB,\n          setDatasetBands\n        }\n      }}>\n        <Box\n          display={'flex'}\n          height={1}\n          width={1}\n        >\n          <Map host={hostname}/>\n            <SidebarContent>\n              <SidebarTitle\n                host={hostname}\n                details={details}\n                keys={keys}\n              />\n              {\n                hostname && (\n                    <SidebarDatasetsItem host={hostname} />\n                )\n              }\n              \n            </SidebarContent>\n        </Box>\n      </AppContext.Provider>\n    </div>\n   );\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst DHITheme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#0B4566', // DHI Primary color\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#00A4EC', // Automatically generated secondary color\n\t\t\t'&:hover': '#0076C8',\n\t\t},\n\t\tgrey: {\n\t\t\tmedium: '#DBE4E9',\n\t\t\tlight: '#F2F5F7',\n\t\t\tdark: '#86A2B3',\n\t\t},\n\t},\n\tflexLayout: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflex: 1,\n\t},\n\ttypography: {\n\t\th1: { fontSize: 32, fontWeight: 500 },\n\t\th2: { fontSize: 14, fontWeight: 400 },\n\t\th3: { fontSize: 50, fontWeight: 800 },\n\t\th6: {\n\t\t\tcolor: '#0B4566',\n\t\t\tfontSize: 14,\n\t\t\tbackgroundColor: '#F2F5F7',\n\t\t\tpadding: '8px 16px',\n\t\t},\n\t\th5: {\n\t\t\tfontSize: 12,\n\t\t\tcolor: '#0B4566',\n\t\t},\n\t\tp: {\n\t\t\tfontSize: 12,\n\t\t},\n\t\tsubtitle1: {\n\t\t\tfontSize: 14,\n\t\t\tfontWeight: 600,\n\t\t\tcolor: '#0B4566',\n\t\t},\n\t\tbody2: {\n\t\t\tfontSize: 12,\n\t\t},\n\t},\n\tdrawerColor: '#ffffff',\n\tdrawerWidth: '50vw',\n\toverrides: {\n\t\tMuiButton: {\n\t\t\troot: {\n\t\t\t\tcolor: '#fff',\n\t\t\t\tfontSize: 12,\n\n\t\t\t\ttextTransform: 'initial',\n\t\t\t\tpadding: '8px 16px',\n\t\t\t},\n\t\t\tcontainedSecondary: {\n\t\t\t\tbackgroundColor: '#00A4EC',\n\t\t\t\tcolor: '#fff',\n\t\t\t\t'&:disabled': {\n\t\t\t\t\tbackgroundColor: 'rgb(242, 245, 247)',\n\t\t\t\t\tcolor: 'rgba(207,219,226)',\n\t\t\t\t},\n\t\t\t\t'&:hover': {\n\t\t\t\t\tbackgroundColor: '#0076C8',\n\t\t\t\t},\n\t\t\t},\n\t\t\toutlinedPrimary: {\n\t\t\t\tbackgroundColor: ' rgba(0, 164, 236, 0.08)',\n\t\t\t\tborder: '1px solid #00A4EC',\n\t\t\t\tcolor: '#0B4566',\n\t\t\t},\n\t\t\toutlinedSecondary: {\n\t\t\t\tborder: '1px solid #DBE4E9',\n\t\t\t\tcolor: '#0B4566',\n\t\t\t},\n\t\t},\n\t\tMuiCardActions: {\n\t\t\troot: {\n\t\t\t\tpadding: 0,\n\t\t\t},\n\t\t},\n\t\tMuiCardContent: {\n\t\t\troot: {\n\t\t\t\tpadding: 0,\n\t\t\t\t'&:last-child': {\n\t\t\t\t\tpaddingBottom: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tMuiCheckbox: {\n\t\t\troot: {\n\t\t\t\tpadding: '0px',\n\t\t\t\tMuiSvgIcon: {\n\t\t\t\t\troot: {\n\t\t\t\t\t\twidth: '12px',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tMuiAccordion: {\n\t\t\troot: {\n\t\t\t\t'&$expanded': {\n\t\t\t\t\tmargin: 0,\n\t\t\t\t},\n\t\t\t\t'&:before': {\n\t\t\t\t\tbackgroundColor: 'none',\n\t\t\t\t},\n\t\t\t\t'&$disabled': {\n\t\t\t\t\tbackgroundColor: '#f2f5f7',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tMuiAccordionDetails: {\n\t\t\troot: {\n\t\t\t\tborderBottom: '1px solid #DBE4E9',\n\t\t\t},\n\t\t},\n\t\tMuiAccordionSummary: {\n\t\t\tcontent: {\n\t\t\t\tmargin: '8px 0px ',\n\t\t\t\t'&$expanded': {\n\t\t\t\t\tmargin: '8px 0px ',\n\t\t\t\t},\n\t\t\t},\n\t\t\troot: {\n\t\t\t\tbackgroundColor: '#F8F8F8',\n\t\t\t\tborderBottom: '1px solid #DBE4E9',\n\t\t\t\tminHeight: 0,\n\t\t\t\t'&$expanded': {\n\t\t\t\t\tminHeight: 0,\n\t\t\t\t\tbackgroundColor: '#F2F5F7',\n\t\t\t\t},\n\t\t\t\t'&:hover': {\n\t\t\t\t\tbackgroundColor: '#F2F5F7',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tMuiFormControlLabel: {\n\t\t\troot: {\n\t\t\t\twidth: '50%',\n\t\t\t\tmarginLeft: '0px',\n\t\t\t\tmarginRight: '0px',\n\t\t\t\t'Mui-disabled': {\n\t\t\t\t\t'-webkit-text-fill-color': 'rgba(207,219,226)',\n\t\t\t\t\topacity: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t\tlabel: {\n\t\t\t\tfontSize: '12px',\n\t\t\t\tpaddingLeft: '.2rem',\n\t\t\t},\n\t\t},\n\t\tMuiIconButton: {\n\t\t\troot: {\n\t\t\t\tpadding: 8,\n\t\t\t},\n\t\t},\n\t\tMuiInputBase: {\n\t\t\tinput: {\n\t\t\t\tfontSize: 12,\n\t\t\t\tcolor: '#0B4566',\n\t\t\t},\n\t\t},\n\n\t\tMuiPaper: {\n\t\t\troot: {\n\t\t\t\tcolor: '#0B4566',\n\t\t\t},\n\t\t\trounded: {\n\t\t\t\tborderRadius: 0,\n\t\t\t},\n\t\t\televation1: {\n\t\t\t\tboxShadow: 'none',\n\t\t\t},\n\t\t\televation4: {\n\t\t\t\tboxShadow: 'none',\n\t\t\t},\n\t\t},\n\t\tMuiSvgIcon: {\n\t\t\troot: {\n\t\t\t\twidth: 16,\n\t\t\t\theight: 16,\n\t\t\t},\n\t\t},\n\t\tMuiToolbar: {\n\t\t\tregular: {\n\t\t\t\tminHeight: 56,\n\t\t\t\t'@media (min-width: 600px)': {\n\t\t\t\t\tminHeight: 56,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tMuiTooltip: {\n\t\t\ttooltip: {\n\t\t\t\tcolor: '#fff',\n\t\t\t\tbackgroundColor: '#0B4566',\n\t\t\t},\n\t\t\tarrow: {\n\t\t\t\tcolor: '#0B4566',\n\t\t\t},\n\t\t},\n\t},\n})\n\nexport default DHITheme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from \"@material-ui/core\"\nimport DhiTheme from \"./theme/theme\"\n\nrequire('dotenv').config()\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ThemeProvider theme={DhiTheme}>\n\t\t\t<App hostnameProp={document.getElementById('hostname-id')?.innerText}/>\n\t\t</ThemeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}